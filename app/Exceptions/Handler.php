<?php

namespace App\Exceptions;

use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array<int, class-string<Throwable>>
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    /**
     * 集中处理 Exception
     * @param $request
     * @param Throwable $e
     * @return \Illuminate\Http\JsonResponse|\Illuminate\Http\Response|\Symfony\Component\HttpFoundation\Response
     * @throws Throwable
     */
    public function render($request, Throwable $e)
    {
        // 登录是否已过期
        $message = $e->getMessage();
        $hasUnauthorized = strripos($message, "401");
        $hasExpired = strrpos($message, 'Token has expired');
        if ($hasUnauthorized !== false && $hasExpired !== false) {
            $request->session()->forget('customer_info');
            $request->session()->flash('warning', $message);
            return response()->redirectToRoute('login.show');
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
